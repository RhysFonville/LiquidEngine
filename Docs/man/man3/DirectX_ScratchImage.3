.TH "DirectX::ScratchImage" 3 "Fri Aug 11 2023" "Liquid Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DirectX::ScratchImage
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBScratchImage\fP (\fBScratchImage\fP &&moveFrom) noexcept"
.br
.ti -1c
.RI "\fBScratchImage\fP &__cdecl \fBoperator=\fP (\fBScratchImage\fP &&moveFrom) noexcept"
.br
.ti -1c
.RI "\fBScratchImage\fP (const \fBScratchImage\fP &)=delete"
.br
.ti -1c
.RI "\fBScratchImage\fP & \fBoperator=\fP (const \fBScratchImage\fP &)=delete"
.br
.ti -1c
.RI "HRESULT __cdecl \fBInitialize\fP (_In_ const \fBTexMetadata\fP &mdata, _In_ CP_FLAGS flags=CP_FLAGS_NONE) noexcept"
.br
.ti -1c
.RI "HRESULT __cdecl \fBInitialize1D\fP (_In_ DXGI_FORMAT fmt, _In_ size_t length, _In_ size_t arraySize, _In_ size_t mipLevels, _In_ CP_FLAGS flags=CP_FLAGS_NONE) noexcept"
.br
.ti -1c
.RI "HRESULT __cdecl \fBInitialize2D\fP (_In_ DXGI_FORMAT fmt, _In_ size_t width, _In_ size_t height, _In_ size_t arraySize, _In_ size_t mipLevels, _In_ CP_FLAGS flags=CP_FLAGS_NONE) noexcept"
.br
.ti -1c
.RI "HRESULT __cdecl \fBInitialize3D\fP (_In_ DXGI_FORMAT fmt, _In_ size_t width, _In_ size_t height, _In_ size_t depth, _In_ size_t mipLevels, _In_ CP_FLAGS flags=CP_FLAGS_NONE) noexcept"
.br
.ti -1c
.RI "HRESULT __cdecl \fBInitializeCube\fP (_In_ DXGI_FORMAT fmt, _In_ size_t width, _In_ size_t height, _In_ size_t nCubes, _In_ size_t mipLevels, _In_ CP_FLAGS flags=CP_FLAGS_NONE) noexcept"
.br
.ti -1c
.RI "HRESULT __cdecl \fBInitializeFromImage\fP (_In_ const \fBImage\fP &srcImage, _In_ bool allow1D=false, _In_ CP_FLAGS flags=CP_FLAGS_NONE) noexcept"
.br
.ti -1c
.RI "HRESULT __cdecl \fBInitializeArrayFromImages\fP (_In_reads_(nImages) const \fBImage\fP *images, _In_ size_t nImages, _In_ bool allow1D=false, _In_ CP_FLAGS flags=CP_FLAGS_NONE) noexcept"
.br
.ti -1c
.RI "HRESULT __cdecl \fBInitializeCubeFromImages\fP (_In_reads_(nImages) const \fBImage\fP *images, _In_ size_t nImages, _In_ CP_FLAGS flags=CP_FLAGS_NONE) noexcept"
.br
.ti -1c
.RI "HRESULT __cdecl \fBInitialize3DFromImages\fP (_In_reads_(depth) const \fBImage\fP *images, _In_ size_t depth, _In_ CP_FLAGS flags=CP_FLAGS_NONE) noexcept"
.br
.ti -1c
.RI "void __cdecl \fBRelease\fP () noexcept"
.br
.ti -1c
.RI "bool __cdecl \fBOverrideFormat\fP (_In_ DXGI_FORMAT f) noexcept"
.br
.ti -1c
.RI "const \fBTexMetadata\fP &__cdecl \fBGetMetadata\fP () const noexcept"
.br
.ti -1c
.RI "const \fBImage\fP *__cdecl \fBGetImage\fP (_In_ size_t mip, _In_ size_t item, _In_ size_t slice) const noexcept"
.br
.ti -1c
.RI "const \fBImage\fP *__cdecl \fBGetImages\fP () const noexcept"
.br
.ti -1c
.RI "size_t __cdecl \fBGetImageCount\fP () const noexcept"
.br
.ti -1c
.RI "uint8_t *__cdecl \fBGetPixels\fP () const noexcept"
.br
.ti -1c
.RI "size_t __cdecl \fBGetPixelsSize\fP () const noexcept"
.br
.ti -1c
.RI "bool __cdecl \fBIsAlphaAllOpaque\fP () const noexcept"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for Liquid Engine from the source code\&.
