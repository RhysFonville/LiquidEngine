.TH "LightComponent" 3 "Thu Feb 8 2024" "Liquid Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
LightComponent \- Main class for the light components\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <LightComponent\&.h>\fP
.PP
Inherits \fBGraphicsComponent\fP\&.
.PP
Inherited by \fBDirectionalLightComponent\fP, \fBPointLightComponent\fP, and \fBSpotlightComponent\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBLightComponent\fP (Type type)"
.br
.ti -1c
.RI "\fBColor\fP \fBget_albedo\fP () const noexcept"
.br
.ti -1c
.RI "void \fBset_albedo\fP (const \fBColor\fP &albedo)"
.br
.ti -1c
.RI "\fBColor\fP \fBget_specular\fP () const noexcept"
.br
.ti -1c
.RI "void \fBset_specular\fP (const \fBColor\fP &specular)"
.br
.ti -1c
.RI "bool \fBis_null\fP () const noexcept"
.br
.ti -1c
.RI "void \fBis_null\fP (bool null) noexcept"
.br
.in -1c

Public Member Functions inherited from \fBGraphicsComponent\fP
.in +1c
.ti -1c
.RI "\fBGraphicsComponent\fP (Type type)"
.br
.ti -1c
.RI "virtual void \fBset_position\fP (\fBFVector3\fP position) noexcept override"
.br
.ti -1c
.RI "virtual void \fBset_rotation\fP (\fBFVector3\fP rotation) noexcept"
.br
.ti -1c
.RI "virtual void \fBset_size\fP (\fBFVector3\fP size) noexcept"
.br
.ti -1c
.RI "bool \fBhas_changed\fP () const noexcept"
.br
.ti -1c
.RI "void \fBhas_changed\fP (bool changed) noexcept"
.br
.in -1c

Public Member Functions inherited from \fBComponent\fP
.in +1c
.ti -1c
.RI "\fBComponent\fP (const Type &type)"
.br
.ti -1c
.RI "virtual void \fBset_position\fP (\fBFVector3\fP position) noexcept"
.br
.ti -1c
.RI "virtual void \fBset_rotation\fP (\fBFVector3\fP rotation) noexcept"
.br
.ti -1c
.RI "virtual void \fBset_size\fP (\fBFVector3\fP size) noexcept"
.br
.ti -1c
.RI "virtual void \fBtranslate\fP (\fBFVector3\fP position) noexcept"
.br
.ti -1c
.RI "virtual void \fBrotate\fP (\fBFVector3\fP rotation) noexcept"
.br
.ti -1c
.RI "virtual void \fBsize\fP (\fBFVector3\fP size) noexcept"
.br
.ti -1c
.RI "virtual GET \fBFVector3\fP \fBget_position\fP () const noexcept"
.br
.ti -1c
.RI "virtual GET \fBFVector3\fP \fBget_rotation\fP () const noexcept"
.br
.ti -1c
.RI "virtual GET \fBFVector3\fP \fBget_size\fP () const noexcept"
.br
.ti -1c
.RI "virtual void \fBset_transform\fP (\fBTransform\fP transform) noexcept"
.br
.ti -1c
.RI "virtual GET \fBTransform\fP \fBget_transform\fP () const noexcept"
.br
.ti -1c
.RI "GET Type \fBget_type\fP () const noexcept"
.br
.ti -1c
.RI "virtual bool \fBoperator==\fP (const \fBComponent\fP &component) const noexcept"
.br
.ti -1c
.RI "virtual void \fBoperator=\fP (const \fBComponent\fP &component) noexcept"
.br
.in -1c

Public Member Functions inherited from \fBControllable\fP
.in +1c
.ti -1c
.RI "virtual void \fBbase_clean_up\fP ()"
.br
.ti -1c
.RI "virtual void \fBbase_compile\fP ()"
.br
.ti -1c
.RI "virtual void \fBbase_tick\fP (float dt)"
.br
.ti -1c
.RI "virtual void \fBon_start\fP ()"
.br
.ti -1c
.RI "virtual void \fBclean_up\fP ()"
.br
.ti -1c
.RI "virtual void \fBcompile\fP ()"
.br
.ti -1c
.RI "virtual void \fBtick\fP (float dt)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "template<ACCEPT_BASE_AND_HEIRS_ONLY(typename T, \fBComponent\fP) > static bool \fBis_light_component\fP (const T &component)"
.br
.in -1c

Static Public Member Functions inherited from \fBGraphicsComponent\fP
.in +1c
.ti -1c
.RI "template<ACCEPT_BASE_AND_HEIRS_ONLY(typename T, \fBComponent\fP) > static bool \fBis_graphics_component\fP (const T &component)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBColor\fP \fBalbedo\fP = \fBColor\fP(255, 255, 255, 255)"
.br
.ti -1c
.RI "\fBColor\fP \fBspecular\fP = \fBColor\fP(5, 5, 5, 255)"
.br
.ti -1c
.RI "bool \fBnull\fP = false"
.br
.in -1c

Protected Attributes inherited from \fBGraphicsComponent\fP
.in +1c
.ti -1c
.RI "bool \fBchanged\fP {false}"
.br
.in -1c

Protected Attributes inherited from \fBComponent\fP
.in +1c
.ti -1c
.RI "\fBTransform\fP \fBtransform\fP"
.br
.ti -1c
.RI "Type \fBtype\fP = Type::None"
.br
.in -1c
.SS "Additional Inherited Members"


Public Types inherited from \fBComponent\fP
.in +1c
.ti -1c
.RI "enum class \fBType\fP { \fBNone\fP, \fBStaticMeshComponent\fP, \fBCameraComponent\fP, \fBDirectionalLightComponent\fP, \fBPointLightComponent\fP, \fBSpotlightComponent\fP, \fBBoxComponent\fP, \fBSkyComponent\fP }"
.br
.in -1c

Public Attributes inherited from \fBComponent\fP
.in +1c
.ti -1c
.RI "\fBComponent\fP * \fBparent\fP = nullptr"
.br
.in -1c
.SH "Detailed Description"
.PP 
Main class for the light components\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Liquid Engine from the source code\&.
