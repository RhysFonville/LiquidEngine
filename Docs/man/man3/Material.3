.TH "Material" 3 "Thu Feb 8 2024" "Liquid Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Material \- \fBMaterial\fP data for rendering\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Material\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBcompile\fP (const ComPtr< ID3D12Device > &device, const ComPtr< ID3D12GraphicsCommandList > &command_list, const DXGI_SAMPLE_DESC &sample_desc, const D3D12_DEPTH_STENCIL_DESC &depth_stencil_desc, const \fBUVector2\fP &resolution)"
.br
.ti -1c
.RI "void \fBcompile\fP ()"
.br
.ti -1c
.RI "void \fBclean_up\fP ()"
.br
.ti -1c
.RI "void \fBset_data\fP (const std::string &file)"
.br
.ti -1c
.RI "void \fBset_data\fP (const \fBMaterial\fP &material)"
.br
.ti -1c
.RI "bool \fBhas_texture\fP () const noexcept"
.br
.ti -1c
.RI "bool \fBhas_normal_map\fP () const noexcept"
.br
.ti -1c
.RI "void \fBoperator=\fP (const \fBMaterial\fP &material) noexcept"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBMaterial\fP &material) const noexcept"
.br
.ti -1c
.RI "const \fBTexture\fP & \fBget_albedo_texture\fP () const"
.br
.ti -1c
.RI "void \fBset_albedo_texture\fP (std::string texture)"
.br
.ti -1c
.RI "const \fBTexture\fP & \fBget_normal_map\fP () const"
.br
.ti -1c
.RI "void \fBset_normal_map\fP (std::string texture)"
.br
.ti -1c
.RI "\fBColor\fP \fBget_albedo\fP () const"
.br
.ti -1c
.RI "void \fBset_albedo\fP (const \fBColor\fP &albedo)"
.br
.ti -1c
.RI "\fBColor\fP \fBget_specular\fP () const"
.br
.ti -1c
.RI "void \fBset_specular\fP (const \fBColor\fP &specular)"
.br
.ti -1c
.RI "\fBColor\fP \fBget_ambient\fP () const"
.br
.ti -1c
.RI "void \fBset_ambient\fP (const \fBColor\fP &ambient)"
.br
.ti -1c
.RI "float \fBget_shininess\fP () const"
.br
.ti -1c
.RI "void \fBset_shininess\fP (const float &shininess)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBGraphicsPipeline\fP \fBpipeline\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBMaterial\fP data for rendering\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Liquid Engine from the source code\&.
