.TH "TVector4< T >" 3 "Wed Jul 9 2025" "Liquid Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TVector4< T >
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTVector4\fP (T v)"
.br
.ti -1c
.RI "\fBTVector4\fP (T vec[4])"
.br
.ti -1c
.RI "constexpr \fBTVector4\fP (T x, T y, T z, T w)"
.br
.ti -1c
.RI "\fBTVector4\fP (\fBTVector3\fP< T > vector, T w)"
.br
.ti -1c
.RI "bool \fBis_zero\fP () const noexcept"
.br
.ti -1c
.RI "\fBTVector4\fP< T > \fBoperator+\fP (\fBTVector4\fP< T > vector) const noexcept"
.br
.ti -1c
.RI "\fBTVector4\fP< T > \fBoperator\-\fP (const \fBTVector4\fP< T > &vector) const noexcept"
.br
.ti -1c
.RI "\fBTVector4\fP< T > \fBoperator*\fP (const \fBTVector4\fP< T > &vector) const noexcept"
.br
.ti -1c
.RI "\fBTVector4\fP< T > \fBoperator*\fP (T n) const noexcept"
.br
.ti -1c
.RI "\fBTVector4\fP< T > \fBoperator/\fP (const \fBTVector4\fP< T > &vector) const noexcept"
.br
.ti -1c
.RI "\fBTVector4\fP< T > \fBoperator/\fP (T n) const noexcept"
.br
.ti -1c
.RI "void \fBoperator+=\fP (const \fBTVector4\fP< T > &vector) noexcept"
.br
.ti -1c
.RI "void \fBoperator\-=\fP (const \fBTVector4\fP< T > &vector) noexcept"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBTVector4\fP< T > &vector) const noexcept"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBTVector4\fP< T > &vector) const noexcept"
.br
.ti -1c
.RI "void \fBoperator=\fP (const \fBTVector4\fP< T > &vector) noexcept"
.br
.ti -1c
.RI "void \fBoperator=\fP (const XMVECTOR &vector) noexcept"
.br
.ti -1c
.RI "T & \fBoperator[]\fP (UCHAR index) const"
.br
.ti -1c
.RI "std::string \fBto_string\fP () const noexcept"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "T \fBx\fP = 0"
.br
.ti -1c
.RI "T \fBy\fP = 0"
.br
.ti -1c
.RI "T \fBz\fP = 0"
.br
.ti -1c
.RI "T \fBw\fP = 0"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &os, const \fBTVector4\fP< T > &vec)"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for Liquid Engine from the source code\&.
